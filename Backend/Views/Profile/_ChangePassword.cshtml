@model Backend.Models.UserProfile
<form id="editUser">

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserId)
    <div class="row mb-3">
        <div class="col-lg-4">
            <label>Personal Number/User Code</label>
            <div class="form-group">
                @Html.EditorFor(model => model.UserCode, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   minlength = "4",
                   maxlength = "7",
                   required = "required",
                   placeholder = "Personal Number",
                   data_parsley_required_message = "Please Enter Personal Number",
                   data_parsley_length = "[6, 6]"
               }
           })
                <div class="help-block"></div>
            </div>
        </div>
        <div class="col-lg-4">
            <label>Name</label>
            <div class="form-group">
                @Html.EditorFor(model => model.Name, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   required = "required",
                   placeholder = "Name",
                   data_parsley_required_message = "Please Enter User Name",
               }
           })
                <div class="help-block"></div>
            </div>
        </div>
        <div class="col-lg-4">
            <label>Email</label>
            <div class="form-group">
                @Html.EditorFor(model => model.Email, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   required = "required",
                   data_parsley_pattern = "[a-zA-Z0-9._&]+@[a-zA-Z0-9._-]+\\.+[a-z._-]+",
                   data_parsley_pattern_message = "Please Enter Valid Email Address",
                   data_parsley_required_message = "Please Enter Email Address",
                   data_parsley_type = "email",
                   placeholder = "Email",
                   data_parsley_type_message = "Please Enter Valid Email Address"
               }
           })
                <div class="help-block"></div>
            </div>
        </div>

    </div>
    <div class="row mb-3">
        <div class="col-lg-4">
            <label>Mobile</label>
            <div class="form-group">
                @Html.EditorFor(model => model.Mobile, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   data_parsley_pattern = "^\\d{10}$",
                   placeholder = "Mobile",
                   data_parsley_pattern_message = "Please Enter Valid Mobile No",
               }
           })
                <div class="help-block"></div>
            </div>
        </div>
        <div class="col-lg-4">
            <label>Role</label>
            <div class="form-group">
                @Html.DropDownListFor(model => model.Role, (IEnumerable<SelectListItem>)ViewData["ROLEselectListItems"], new { @class = "form-control ddlRole", required = "required", data_parsley_required_message = "Please Select Role" })
                <div class="help-block"></div>
            </div>
        </div>
        @*<div class="col-lg-4">
                <label>Department</label>
                <div class="form-group">
                    @Html.DropDownListFor(model => model.Department, (IEnumerable<SelectListItem>)ViewData["DEPTselectListItems"], new { @class = "form-control", required = "required",data_parsley_required_message = "Please Select Department" })
                    <div class="help-block"></div>
                </div>
            </div>*@
    </div>
    <div class="row mb-3">
        <div class="col-lg-4">
            <label>Username</label>
            <div class="form-group">
                @Html.EditorFor(model => model.Username, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   minlength = "4",
                   maxlength = "7",
                   required = "required",
                   placeholder = "Personal Number",
                   data_parsley_required_message = "Please Enter Username",
                   data_parsley_length = "[6, 6]"
               }
           })
                <div class="help-block"></div>
            </div>
        </div>
        <div class="col-lg-4">
             <label>IsActive</label>
            <div class="form-group">
               
                <div class="form-group">
                    @Html.DropDownListFor(model => model.IsActive, (IEnumerable<SelectListItem>)ViewData["VALIDUSERselectListItems"], new { @class = "form-control", required = "required", data_parsley_required_message = "Please Select IsActive" })
                </div>
                 <div class="help-block"></div>
            </div>
        </div>
    </div>
    
    <hr />
    <div class="row">
        <div class="col-lg-4">
            <label>Reset Password</label>
            <div class="form-group">
                <div class="input-group">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "New Password", minlength = "6", data_parsley_required_message = "Please Enter Password" } })
                    <span class="input-group-btn ms-1">
                        <a id="ResetPassword" href="javascript:void(0);" class="btn btn-primary" onclick="getPasswordResetConfirmation();">Reset</a>
                    </span>
                </div>
                <div class="help-block"></div>
            </div>
        </div>
    </div>
</form>





